// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Battery.proto

package com.apron.mobilesdk.state;

public final class ProtoBattery {
  private ProtoBattery() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface BatteryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Battery)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *电压(mV)
     * </pre>
     *
     * <code>int32 voltage = 1;</code>
     * @return The voltage.
     */
    int getVoltage();

    /**
     * <pre>
     *以百分比形式返回电池的剩余寿命，范围为 [0, 100]。
     * </pre>
     *
     * <code>int32 lifetimeRemaining = 3;</code>
     * @return The lifetimeRemaining.
     */
    int getLifetimeRemaining();

    /**
     * <pre>
     *返回范围为 [0, 100] 的电池剩余电量百分比。
     * </pre>
     *
     * <code>int32 chargeRemainingInPercent = 4;</code>
     * @return The chargeRemainingInPercent.
     */
    int getChargeRemainingInPercent();

    /**
     * <pre>
     *电池温度
     * </pre>
     *
     * <code>float temperature = 5;</code>
     * @return The temperature.
     */
    float getTemperature();

    /**
     * <pre>
     *返回电池在其生命周期内经历的总放电次数。
     * </pre>
     *
     * <code>int32 numberOfDischarges = 6;</code>
     * @return The numberOfDischarges.
     */
    int getNumberOfDischarges();

    /**
     * <pre>
     *获取电池的子电池电压。电池中的每个子电池都有一个电压。
     * </pre>
     *
     * <code>string cellVoltage = 2;</code>
     * @return The cellVoltage.
     */
    java.lang.String getCellVoltage();
    /**
     * <pre>
     *获取电池的子电池电压。电池中的每个子电池都有一个电压。
     * </pre>
     *
     * <code>string cellVoltage = 2;</code>
     * @return The bytes for cellVoltage.
     */
    com.google.protobuf.ByteString
        getCellVoltageBytes();

    /**
     * <code>.Battery.ConnectionState connectionState = 7;</code>
     * @return The enum numeric value on the wire for connectionState.
     */
    int getConnectionStateValue();
    /**
     * <code>.Battery.ConnectionState connectionState = 7;</code>
     * @return The connectionState.
     */
    com.apron.mobilesdk.state.ProtoBattery.Battery.ConnectionState getConnectionState();
  }
  /**
   * Protobuf type {@code Battery}
   */
  public  static final class Battery extends
      com.google.protobuf.GeneratedMessageLite<
          Battery, Battery.Builder> implements
      // @@protoc_insertion_point(message_implements:Battery)
      BatteryOrBuilder {
    private Battery() {
      cellVoltage_ = "";
    }
    /**
     * <pre>
     *电池连接状态。0 表示正常，1 表示无效，2 表示通信中的异常。
     * </pre>
     *
     * Protobuf enum {@code Battery.ConnectionState}
     */
    public enum ConnectionState
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>NORMAL = 0;</code>
       */
      NORMAL(0),
      /**
       * <code>INVALID = 1;</code>
       */
      INVALID(1),
      /**
       * <code>EXCEPTION = 2;</code>
       */
      EXCEPTION(2),
      /**
       * <code>UNKNOWN = 255;</code>
       */
      UNKNOWN(255),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NORMAL = 0;</code>
       */
      public static final int NORMAL_VALUE = 0;
      /**
       * <code>INVALID = 1;</code>
       */
      public static final int INVALID_VALUE = 1;
      /**
       * <code>EXCEPTION = 2;</code>
       */
      public static final int EXCEPTION_VALUE = 2;
      /**
       * <code>UNKNOWN = 255;</code>
       */
      public static final int UNKNOWN_VALUE = 255;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ConnectionState valueOf(int value) {
        return forNumber(value);
      }

      public static ConnectionState forNumber(int value) {
        switch (value) {
          case 0: return NORMAL;
          case 1: return INVALID;
          case 2: return EXCEPTION;
          case 255: return UNKNOWN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ConnectionState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ConnectionState> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ConnectionState>() {
              @java.lang.Override
              public ConnectionState findValueByNumber(int number) {
                return ConnectionState.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return ConnectionStateVerifier.INSTANCE;
      }

      private static final class ConnectionStateVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ConnectionStateVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return ConnectionState.forNumber(number) != null;
              }
            };

      private final int value;

      private ConnectionState(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Battery.ConnectionState)
    }

    public static final int VOLTAGE_FIELD_NUMBER = 1;
    private int voltage_;
    /**
     * <pre>
     *电压(mV)
     * </pre>
     *
     * <code>int32 voltage = 1;</code>
     * @return The voltage.
     */
    @java.lang.Override
    public int getVoltage() {
      return voltage_;
    }
    /**
     * <pre>
     *电压(mV)
     * </pre>
     *
     * <code>int32 voltage = 1;</code>
     * @param value The voltage to set.
     */
    private void setVoltage(int value) {
      
      voltage_ = value;
    }
    /**
     * <pre>
     *电压(mV)
     * </pre>
     *
     * <code>int32 voltage = 1;</code>
     */
    private void clearVoltage() {
      
      voltage_ = 0;
    }

    public static final int LIFETIMEREMAINING_FIELD_NUMBER = 3;
    private int lifetimeRemaining_;
    /**
     * <pre>
     *以百分比形式返回电池的剩余寿命，范围为 [0, 100]。
     * </pre>
     *
     * <code>int32 lifetimeRemaining = 3;</code>
     * @return The lifetimeRemaining.
     */
    @java.lang.Override
    public int getLifetimeRemaining() {
      return lifetimeRemaining_;
    }
    /**
     * <pre>
     *以百分比形式返回电池的剩余寿命，范围为 [0, 100]。
     * </pre>
     *
     * <code>int32 lifetimeRemaining = 3;</code>
     * @param value The lifetimeRemaining to set.
     */
    private void setLifetimeRemaining(int value) {
      
      lifetimeRemaining_ = value;
    }
    /**
     * <pre>
     *以百分比形式返回电池的剩余寿命，范围为 [0, 100]。
     * </pre>
     *
     * <code>int32 lifetimeRemaining = 3;</code>
     */
    private void clearLifetimeRemaining() {
      
      lifetimeRemaining_ = 0;
    }

    public static final int CHARGEREMAININGINPERCENT_FIELD_NUMBER = 4;
    private int chargeRemainingInPercent_;
    /**
     * <pre>
     *返回范围为 [0, 100] 的电池剩余电量百分比。
     * </pre>
     *
     * <code>int32 chargeRemainingInPercent = 4;</code>
     * @return The chargeRemainingInPercent.
     */
    @java.lang.Override
    public int getChargeRemainingInPercent() {
      return chargeRemainingInPercent_;
    }
    /**
     * <pre>
     *返回范围为 [0, 100] 的电池剩余电量百分比。
     * </pre>
     *
     * <code>int32 chargeRemainingInPercent = 4;</code>
     * @param value The chargeRemainingInPercent to set.
     */
    private void setChargeRemainingInPercent(int value) {
      
      chargeRemainingInPercent_ = value;
    }
    /**
     * <pre>
     *返回范围为 [0, 100] 的电池剩余电量百分比。
     * </pre>
     *
     * <code>int32 chargeRemainingInPercent = 4;</code>
     */
    private void clearChargeRemainingInPercent() {
      
      chargeRemainingInPercent_ = 0;
    }

    public static final int TEMPERATURE_FIELD_NUMBER = 5;
    private float temperature_;
    /**
     * <pre>
     *电池温度
     * </pre>
     *
     * <code>float temperature = 5;</code>
     * @return The temperature.
     */
    @java.lang.Override
    public float getTemperature() {
      return temperature_;
    }
    /**
     * <pre>
     *电池温度
     * </pre>
     *
     * <code>float temperature = 5;</code>
     * @param value The temperature to set.
     */
    private void setTemperature(float value) {
      
      temperature_ = value;
    }
    /**
     * <pre>
     *电池温度
     * </pre>
     *
     * <code>float temperature = 5;</code>
     */
    private void clearTemperature() {
      
      temperature_ = 0F;
    }

    public static final int NUMBEROFDISCHARGES_FIELD_NUMBER = 6;
    private int numberOfDischarges_;
    /**
     * <pre>
     *返回电池在其生命周期内经历的总放电次数。
     * </pre>
     *
     * <code>int32 numberOfDischarges = 6;</code>
     * @return The numberOfDischarges.
     */
    @java.lang.Override
    public int getNumberOfDischarges() {
      return numberOfDischarges_;
    }
    /**
     * <pre>
     *返回电池在其生命周期内经历的总放电次数。
     * </pre>
     *
     * <code>int32 numberOfDischarges = 6;</code>
     * @param value The numberOfDischarges to set.
     */
    private void setNumberOfDischarges(int value) {
      
      numberOfDischarges_ = value;
    }
    /**
     * <pre>
     *返回电池在其生命周期内经历的总放电次数。
     * </pre>
     *
     * <code>int32 numberOfDischarges = 6;</code>
     */
    private void clearNumberOfDischarges() {
      
      numberOfDischarges_ = 0;
    }

    public static final int CELLVOLTAGE_FIELD_NUMBER = 2;
    private java.lang.String cellVoltage_;
    /**
     * <pre>
     *获取电池的子电池电压。电池中的每个子电池都有一个电压。
     * </pre>
     *
     * <code>string cellVoltage = 2;</code>
     * @return The cellVoltage.
     */
    @java.lang.Override
    public java.lang.String getCellVoltage() {
      return cellVoltage_;
    }
    /**
     * <pre>
     *获取电池的子电池电压。电池中的每个子电池都有一个电压。
     * </pre>
     *
     * <code>string cellVoltage = 2;</code>
     * @return The bytes for cellVoltage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCellVoltageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(cellVoltage_);
    }
    /**
     * <pre>
     *获取电池的子电池电压。电池中的每个子电池都有一个电压。
     * </pre>
     *
     * <code>string cellVoltage = 2;</code>
     * @param value The cellVoltage to set.
     */
    private void setCellVoltage(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      cellVoltage_ = value;
    }
    /**
     * <pre>
     *获取电池的子电池电压。电池中的每个子电池都有一个电压。
     * </pre>
     *
     * <code>string cellVoltage = 2;</code>
     */
    private void clearCellVoltage() {
      
      cellVoltage_ = getDefaultInstance().getCellVoltage();
    }
    /**
     * <pre>
     *获取电池的子电池电压。电池中的每个子电池都有一个电压。
     * </pre>
     *
     * <code>string cellVoltage = 2;</code>
     * @param value The bytes for cellVoltage to set.
     */
    private void setCellVoltageBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      cellVoltage_ = value.toStringUtf8();
      
    }

    public static final int CONNECTIONSTATE_FIELD_NUMBER = 7;
    private int connectionState_;
    /**
     * <code>.Battery.ConnectionState connectionState = 7;</code>
     * @return The enum numeric value on the wire for connectionState.
     */
    @java.lang.Override
    public int getConnectionStateValue() {
      return connectionState_;
    }
    /**
     * <code>.Battery.ConnectionState connectionState = 7;</code>
     * @return The connectionState.
     */
    @java.lang.Override
    public com.apron.mobilesdk.state.ProtoBattery.Battery.ConnectionState getConnectionState() {
      com.apron.mobilesdk.state.ProtoBattery.Battery.ConnectionState result = com.apron.mobilesdk.state.ProtoBattery.Battery.ConnectionState.forNumber(connectionState_);
      return result == null ? com.apron.mobilesdk.state.ProtoBattery.Battery.ConnectionState.UNRECOGNIZED : result;
    }
    /**
     * <code>.Battery.ConnectionState connectionState = 7;</code>
     * @param value The enum numeric value on the wire for connectionState to set.
     */
    private void setConnectionStateValue(int value) {
        connectionState_ = value;
    }
    /**
     * <code>.Battery.ConnectionState connectionState = 7;</code>
     * @param value The connectionState to set.
     */
    private void setConnectionState(com.apron.mobilesdk.state.ProtoBattery.Battery.ConnectionState value) {
      connectionState_ = value.getNumber();
      
    }
    /**
     * <code>.Battery.ConnectionState connectionState = 7;</code>
     */
    private void clearConnectionState() {
      
      connectionState_ = 0;
    }

    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.apron.mobilesdk.state.ProtoBattery.Battery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.apron.mobilesdk.state.ProtoBattery.Battery prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code Battery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.apron.mobilesdk.state.ProtoBattery.Battery, Builder> implements
        // @@protoc_insertion_point(builder_implements:Battery)
        com.apron.mobilesdk.state.ProtoBattery.BatteryOrBuilder {
      // Construct using com.apron.mobilesdk.state.ProtoBattery.Battery.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *电压(mV)
       * </pre>
       *
       * <code>int32 voltage = 1;</code>
       * @return The voltage.
       */
      @java.lang.Override
      public int getVoltage() {
        return instance.getVoltage();
      }
      /**
       * <pre>
       *电压(mV)
       * </pre>
       *
       * <code>int32 voltage = 1;</code>
       * @param value The voltage to set.
       * @return This builder for chaining.
       */
      public Builder setVoltage(int value) {
        copyOnWrite();
        instance.setVoltage(value);
        return this;
      }
      /**
       * <pre>
       *电压(mV)
       * </pre>
       *
       * <code>int32 voltage = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVoltage() {
        copyOnWrite();
        instance.clearVoltage();
        return this;
      }

      /**
       * <pre>
       *以百分比形式返回电池的剩余寿命，范围为 [0, 100]。
       * </pre>
       *
       * <code>int32 lifetimeRemaining = 3;</code>
       * @return The lifetimeRemaining.
       */
      @java.lang.Override
      public int getLifetimeRemaining() {
        return instance.getLifetimeRemaining();
      }
      /**
       * <pre>
       *以百分比形式返回电池的剩余寿命，范围为 [0, 100]。
       * </pre>
       *
       * <code>int32 lifetimeRemaining = 3;</code>
       * @param value The lifetimeRemaining to set.
       * @return This builder for chaining.
       */
      public Builder setLifetimeRemaining(int value) {
        copyOnWrite();
        instance.setLifetimeRemaining(value);
        return this;
      }
      /**
       * <pre>
       *以百分比形式返回电池的剩余寿命，范围为 [0, 100]。
       * </pre>
       *
       * <code>int32 lifetimeRemaining = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLifetimeRemaining() {
        copyOnWrite();
        instance.clearLifetimeRemaining();
        return this;
      }

      /**
       * <pre>
       *返回范围为 [0, 100] 的电池剩余电量百分比。
       * </pre>
       *
       * <code>int32 chargeRemainingInPercent = 4;</code>
       * @return The chargeRemainingInPercent.
       */
      @java.lang.Override
      public int getChargeRemainingInPercent() {
        return instance.getChargeRemainingInPercent();
      }
      /**
       * <pre>
       *返回范围为 [0, 100] 的电池剩余电量百分比。
       * </pre>
       *
       * <code>int32 chargeRemainingInPercent = 4;</code>
       * @param value The chargeRemainingInPercent to set.
       * @return This builder for chaining.
       */
      public Builder setChargeRemainingInPercent(int value) {
        copyOnWrite();
        instance.setChargeRemainingInPercent(value);
        return this;
      }
      /**
       * <pre>
       *返回范围为 [0, 100] 的电池剩余电量百分比。
       * </pre>
       *
       * <code>int32 chargeRemainingInPercent = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearChargeRemainingInPercent() {
        copyOnWrite();
        instance.clearChargeRemainingInPercent();
        return this;
      }

      /**
       * <pre>
       *电池温度
       * </pre>
       *
       * <code>float temperature = 5;</code>
       * @return The temperature.
       */
      @java.lang.Override
      public float getTemperature() {
        return instance.getTemperature();
      }
      /**
       * <pre>
       *电池温度
       * </pre>
       *
       * <code>float temperature = 5;</code>
       * @param value The temperature to set.
       * @return This builder for chaining.
       */
      public Builder setTemperature(float value) {
        copyOnWrite();
        instance.setTemperature(value);
        return this;
      }
      /**
       * <pre>
       *电池温度
       * </pre>
       *
       * <code>float temperature = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperature() {
        copyOnWrite();
        instance.clearTemperature();
        return this;
      }

      /**
       * <pre>
       *返回电池在其生命周期内经历的总放电次数。
       * </pre>
       *
       * <code>int32 numberOfDischarges = 6;</code>
       * @return The numberOfDischarges.
       */
      @java.lang.Override
      public int getNumberOfDischarges() {
        return instance.getNumberOfDischarges();
      }
      /**
       * <pre>
       *返回电池在其生命周期内经历的总放电次数。
       * </pre>
       *
       * <code>int32 numberOfDischarges = 6;</code>
       * @param value The numberOfDischarges to set.
       * @return This builder for chaining.
       */
      public Builder setNumberOfDischarges(int value) {
        copyOnWrite();
        instance.setNumberOfDischarges(value);
        return this;
      }
      /**
       * <pre>
       *返回电池在其生命周期内经历的总放电次数。
       * </pre>
       *
       * <code>int32 numberOfDischarges = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumberOfDischarges() {
        copyOnWrite();
        instance.clearNumberOfDischarges();
        return this;
      }

      /**
       * <pre>
       *获取电池的子电池电压。电池中的每个子电池都有一个电压。
       * </pre>
       *
       * <code>string cellVoltage = 2;</code>
       * @return The cellVoltage.
       */
      @java.lang.Override
      public java.lang.String getCellVoltage() {
        return instance.getCellVoltage();
      }
      /**
       * <pre>
       *获取电池的子电池电压。电池中的每个子电池都有一个电压。
       * </pre>
       *
       * <code>string cellVoltage = 2;</code>
       * @return The bytes for cellVoltage.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getCellVoltageBytes() {
        return instance.getCellVoltageBytes();
      }
      /**
       * <pre>
       *获取电池的子电池电压。电池中的每个子电池都有一个电压。
       * </pre>
       *
       * <code>string cellVoltage = 2;</code>
       * @param value The cellVoltage to set.
       * @return This builder for chaining.
       */
      public Builder setCellVoltage(
          java.lang.String value) {
        copyOnWrite();
        instance.setCellVoltage(value);
        return this;
      }
      /**
       * <pre>
       *获取电池的子电池电压。电池中的每个子电池都有一个电压。
       * </pre>
       *
       * <code>string cellVoltage = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCellVoltage() {
        copyOnWrite();
        instance.clearCellVoltage();
        return this;
      }
      /**
       * <pre>
       *获取电池的子电池电压。电池中的每个子电池都有一个电压。
       * </pre>
       *
       * <code>string cellVoltage = 2;</code>
       * @param value The bytes for cellVoltage to set.
       * @return This builder for chaining.
       */
      public Builder setCellVoltageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCellVoltageBytes(value);
        return this;
      }

      /**
       * <code>.Battery.ConnectionState connectionState = 7;</code>
       * @return The enum numeric value on the wire for connectionState.
       */
      @java.lang.Override
      public int getConnectionStateValue() {
        return instance.getConnectionStateValue();
      }
      /**
       * <code>.Battery.ConnectionState connectionState = 7;</code>
       * @param value The connectionState to set.
       * @return This builder for chaining.
       */
      public Builder setConnectionStateValue(int value) {
        copyOnWrite();
        instance.setConnectionStateValue(value);
        return this;
      }
      /**
       * <code>.Battery.ConnectionState connectionState = 7;</code>
       * @return The connectionState.
       */
      @java.lang.Override
      public com.apron.mobilesdk.state.ProtoBattery.Battery.ConnectionState getConnectionState() {
        return instance.getConnectionState();
      }
      /**
       * <code>.Battery.ConnectionState connectionState = 7;</code>
       * @param value The enum numeric value on the wire for connectionState to set.
       * @return This builder for chaining.
       */
      public Builder setConnectionState(com.apron.mobilesdk.state.ProtoBattery.Battery.ConnectionState value) {
        copyOnWrite();
        instance.setConnectionState(value);
        return this;
      }
      /**
       * <code>.Battery.ConnectionState connectionState = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearConnectionState() {
        copyOnWrite();
        instance.clearConnectionState();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Battery)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.apron.mobilesdk.state.ProtoBattery.Battery();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "voltage_",
              "cellVoltage_",
              "lifetimeRemaining_",
              "chargeRemainingInPercent_",
              "temperature_",
              "numberOfDischarges_",
              "connectionState_",
            };
            java.lang.String info =
                "\u0000\u0007\u0000\u0000\u0001\u0007\u0007\u0000\u0000\u0000\u0001\u0004\u0002\u0208" +
                "\u0003\u0004\u0004\u0004\u0005\u0001\u0006\u0004\u0007\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.apron.mobilesdk.state.ProtoBattery.Battery> parser = PARSER;
          if (parser == null) {
            synchronized (com.apron.mobilesdk.state.ProtoBattery.Battery.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.apron.mobilesdk.state.ProtoBattery.Battery>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Battery)
    private static final com.apron.mobilesdk.state.ProtoBattery.Battery DEFAULT_INSTANCE;
    static {
      Battery defaultInstance = new Battery();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Battery.class, defaultInstance);
    }

    public static com.apron.mobilesdk.state.ProtoBattery.Battery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Battery> PARSER;

    public static com.google.protobuf.Parser<Battery> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
