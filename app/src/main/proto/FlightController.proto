//apron/product/tingyuan/flight_state
syntax = "proto3";
option java_package = "com.apron.mobilesdk.state";
option java_outer_classname = "ProtoFlightController";
message FlightController {

  //电机是否启动
  bool areMotorsOn = 1;

  //是否处于飞行状态
  bool isFlying = 2;

  //飞行器当前经纬度(WGS84精准坐标系,平台可以转换为GCJ02坐标系使用)
  double latitude = 3;
  double longitude = 4;

  //飞行器当前高度
  float altitude = 5;

  //飞机原地位置相对于海平面的相对高度，以米为单位。
  float takeoffLocationAltitude = 6;

  //俯仰、横滚和偏航值将在 [-180, 180] 度范围内的飞机姿态。
  double pitch = 7;
  double roll = 8;
  double yaw = 9;

  //飞机在 x，y，z，方向上的当前速度，以米/秒为单位，使用 NED（North-East-Down）坐标系。
  //平台取(velocityX²+velocityY²)开根值作为水平速度
  float velocityX = 10;
  float velocityY = 11;

  //平台取此值做为垂直速度
  float velocityZ = 12;

  //自飞机发动机开启以来的累计飞行时间（以秒为单位）。
  int32 flightTimeInSeconds = 13;

  //返回 GPS 卫星计数。
  int32 satelliteCount = 14;

  //由超声波传感器测量的飞机高度，以米为单位。数据仅在isUltrasonicBeingUsed返回时可用true。高度精度为0.1m。该值在高度低于 5 米时具有参考意义。
  float ultrasonicHeightInMeters = 16;

  //电池生命周期内的飞行次数。上电时清零。
  int32 flightCount = 20;

  //返航点经纬度
  double homeLocationLatitude = 21;
  double homeLocationLongitude = 22;

  //返航高度
  int32 goHomeHeight = 23;

  //飞行器控制模式
  string flightModeString = 24;

  //风速(分米)
  int32 windSpeed = 26;

  //返航距离
  double goHomeLength = 27;

  //表示航向，以度为单位。正北为 0 度，正航向为北东，负航向为北西。范围为 [-180, 180]。
  float compassHeading = 28;

  //IMU 正在预热
  bool isIMUPreheating = 29;

  //正在使用超声波传感器
  bool isUltrasonicBeingUsed = 30;

  //正在使用视觉传感器
  bool isVisionPositioningSensorBeingUsed = 31;

  //电池电量低于低电量警告阈值
  bool isLowerThanBatteryWarningThreshold = 32;

  //电池电量低于严重低电量警告阈值。
  bool isLowerThanSeriousBatteryWarningThreshold = 33;

  //飞机系统诊断状态(平台可作为飞机状态展示)
  string systemStatus = 34;

  //用于测量信号质量
  enum GPSSignalLevel {
    LEVEL_0 = 0;
    LEVEL_1 = 1;
    LEVEL_2 = 2;
    LEVEL_3 = 3;
    LEVEL_4 = 4;
    LEVEL_5 = 5;
    LEVEL_6 = 6;
    LEVEL_7 = 7;
    LEVEL_8 = 8;
    LEVEL_9 = 9;
    LEVEL_10 = 10;
    NONE = 255;
  }
  GPSSignalLevel GPSsignalLevel = 15;

  //飞行器当前的定向模式。(待测试)
  enum OrientationMode {
    UNKNOWN_MODE = 0;
    AIRCRAFT_HEADING = 255;
    COURSE_LOCK = 1;
    HOME_LOCK = 2;
  }
  OrientationMode  orientationMode = 17;

  //强风引起的警告。
  enum FlightWindWarning {
    WIND_LEVEL_0 = 0;//无风
    WIND_LEVEL_1 = 1;//风速大
    WIND_LEVEL_2 = 2;//风速极大
    WIND_UNKNOWN = 3;//未知
  }
  FlightWindWarning flightWindWarning = 18;

  //风向
  enum WindDirection {
    WINDLESS = 0;//无风
    NORTH = 1;//北风
    NORTH_EAST = 2;//东北风
    EAST = 3;//东风
    SOUTH_EAST = 4;//东南风
    SOUTH = 5;//南风
    SOUTH_WEST = 6;//西南风
    WEST = 7;//西风
    NORTH_WEST = 8;//西北风
  }
  WindDirection windDirection = 25;

  //剩余电池寿命状态。此状态描述基于剩余电池寿命的推荐操作。
  enum BatteryThresholdBehavior {
    FLY_NORMALLY = 0;//剩余电池寿命足以正常飞行。
    GO_HOME = 1;//剩余电池寿命足以正常返航。
    LAND_IMMEDIATELY = 2;//剩余电池寿命足以立即降落。
    UNKNOWN = 255;//未知
  }
  BatteryThresholdBehavior batteryThresholdBehavior = 19;

  //用于标识 go-home 命令的不同阶段的枚举。部分飞行器根据固件仅支持部分状态。
  //例如：
  //Phantom 4 Pro V2.0 和 Mavic 2 Enterprise Dual 仅支持GO_DOWN_TO_GROUND。
  //Matrice 300 RTK 仅支持GO_UP_TO_HEIGHT,AUTO_FLY_TO_HOME_POINT和GO_DOWN_TO_GROUND.
  enum GoHomeExecutionState {
    NOT_EXECUTING = 0;//飞机没有执行返航指令。
    TURN_DIRECTION_TO_HOME_POINT = 2;//飞机正在将航向方向转向返航点。
    GO_UP_TO_HEIGHT = 1;//飞机正在上升到返航指令的高度。
    AUTO_FLY_TO_HOME_POINT = 4;//	飞机水平飞行到返航点。
    GO_DOWN_TO_GROUND = 7;//	飞机到达返航点后正在下降。
    COMPLETED = 8;//go-home 命令完成。
    BRAKING = 5;//飞机正在刹车以避免碰撞。
    BYPASSING = 6;//飞机正在绕过障碍物。
    UNKNOWN_STATE = 255;//回家状态未知。
  }
  GoHomeExecutionState goHomeExecutionState = 35;
}